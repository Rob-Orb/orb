Index: orb-upload/CMakeLists.txt
===================================================================
--- orb-upload.orig/CMakeLists.txt
+++ orb-upload/CMakeLists.txt
@@ -1,5 +1,5 @@
 cmake_minimum_required(VERSION 2.8)
 SET(PROJECT_NAME upload)
 project (${PROJECT_NAME})
-SET(ORB_VERSION "0.0.1")
+SET(ORB_VERSION "0.0.1-2")
 add_subdirectory(src)
Index: orb-upload/orb_upload_completion.bash
===================================================================
--- orb-upload.orig/orb_upload_completion.bash
+++ orb-upload/orb_upload_completion.bash
@@ -9,7 +9,7 @@ _orb_upload_completion()
 
 	RESULT="$(wget -qO - https://rob-orb.github.io/firmwares/ls.index | tr '\r\n' ' ')"
 	
-	if [ $COMP_CWORD == 2 ]; then
+	if [ $COMP_CWORD == 3 ]; then
 		case "$prev" in
 			"upload")
 			COMPREPLY=($(compgen -W "$RESULT" -- $cur));;
Index: orb-upload/src/orb.cpp
===================================================================
--- orb-upload.orig/src/orb.cpp
+++ orb-upload/src/orb.cpp
@@ -9,7 +9,7 @@ using namespace std;
 void helper(){
 	cout << "\nOrb Application Upload Version: " << ORB_VERSION << endl <<
 		"Uses Picberry to upload firmwares to the PIC" << endl << endl <<
-		"Usage: orb upload [options]" << endl << endl <<
+		"Usage: orb upload [firmware] [options]" << endl << endl <<
 		"Options: " << endl <<
 		"-h\t\tprint help" << endl <<
 		"-r [output]\tread chip to file [defaults to ofile.hex] " << endl <<
@@ -27,9 +27,7 @@ int main(int argc, char *argv[])
 	int option_index = 0;
 
 	bool h = false;
-	bool invalid = false;
-	bool write = false;
-	string writeArg = "";
+	bool invalid = true;
 
 	static struct option long_options[] = {
 		{"help",	no_argument, 0, 'h'},
@@ -50,11 +48,8 @@ int main(int argc, char *argv[])
 			case 'h':
 				h = true;
 				break;
-			case 'w':
-				write = true;
-				writeArg = optarg;
-				break;
 			default:
+				invalid = false;
 				h = false;
 				break;
 		}
@@ -65,21 +60,21 @@ int main(int argc, char *argv[])
 		return 0;
 	}
 
-	if(write){
-		cout << writeArg.back() << endl;
-		if(writeArg.back()!='x'){
-			cout << "Gathering firmware " + writeArg + "..." << endl;
-			system(("wget -q https://rob-orb.github.io/firmwares/"+string(writeArg)+".hex -O tmp-1234-rob-orb.hex").c_str());
+	if(!invalid){
+		string args = "";
+		for(int i = 1; i < argc; ++i)	
+			args += string(argv[i]) + " ";
+		system(("picberry -f pic16f150x -g 21,20,19 "+args).c_str());
+	}
+	else{
+		string firm = string(argv[optind]);
+		if(firm.back()!='x'){
+			cout << "Gathering firmware " + firm + "..." << endl;
+			system(("wget -q https://rob-orb.github.io/firmwares/"+firm+".hex -O tmp-1234-rob-orb.hex").c_str());
 
-			system("picberry -f pic16f150x -g 13,19,26 -w tmp-1234-rob-orb.hex");
+			system("picberry -f pic16f150x -g 21,20,19 -w tmp-1234-rob-orb.hex");
 			system("rm -f tmp-1234-rob-orb.hex");
 		}
-	}else{
-
-		string args = "";
-		for(int i = 1; i < argc; ++i)
-			args += string(argv[i]) + " ";
-		system(("picberry -f pic16f150x -g 13,19,26 "+args).c_str());
 	}
 	return 0;
 }
